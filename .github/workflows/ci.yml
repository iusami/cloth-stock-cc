name: Continuous Integration

# ワークフロートリガー: プッシュとプルリクエスト
on:
  push:
    branches: [ '*' ]  # 全ブランチ
  pull_request:
    branches: [ '*' ]  # 全ブランチへのPR

# 並行実行制御（同じPRで複数回実行時は最新のみ）
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    name: Test and Build Android App
    runs-on: ubuntu-latest
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    
    # タイムアウト設定（デフォルト6時間は長すぎる）
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --stacktrace
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()  # テスト失敗時もレポート生成
      with:
        name: Unit Tests Results
        path: '**/build/test-results/testDebugUnitTest/TEST-*.xml'
        reporter: java-junit
        fail-on-error: false
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: debug-apk-${{ github.sha }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # 成功・失敗問わずアップロード
      with:
        name: test-results-${{ github.sha }}
        path: |
          **/build/test-results/testDebugUnitTest/
          **/build/reports/tests/testDebugUnitTest/
        retention-days: 30
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()  # 失敗時のみログアップロード
      with:
        name: build-logs-${{ github.sha }}
        path: |
          **/build/reports/
          **/build.log
        retention-days: 7

  # コードカバレッジ計測（将来の拡張用）
  code-coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    needs: test-and-build  # テストが成功した場合のみ実行
    if: success()
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Generate code coverage report
      run: ./gradlew jacocoTestReport --stacktrace
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: 'app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # カバレッジ失敗でもCIは継続

  # 静的解析（将来の拡張用）
  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Run lint analysis
      run: ./gradlew lintDebug --stacktrace
      
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results-${{ github.sha }}
        path: '**/build/reports/lint-results-*.html'
        retention-days: 30