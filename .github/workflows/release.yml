name: Release Build and Deploy

# リリースワークフロートリガー: タグプッシュ時のみ
on:
  push:
    tags:
      - 'v*.*.*'  # v1.0.0, v2.1.3 などのセマンティックバージョン

# 権限設定（GitHub Releaseの作成に必要）
permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build and Release APK
    runs-on: ubuntu-latest
    
    # タイムアウト設定
    timeout-minutes: 45
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 全履歴を取得（リリースノート生成用）
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    # バージョン情報を抽出
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_CODE=$(echo $VERSION | sed 's/v//g' | sed 's/\\.//g')" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"
        
    # リリース前テスト実行（品質保証）
    - name: Run tests before release
      run: ./gradlew test --stacktrace
      
    # リリースAPKビルド
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      env:
        VERSION_NAME: ${{ steps.version.outputs.VERSION }}
        VERSION_CODE: ${{ steps.version.outputs.VERSION_CODE }}
        
    # APKファイルの存在確認
    - name: Verify APK exists
      run: |
        if [ ! -f app/build/outputs/apk/release/*.apk ]; then
          echo "Error: Release APK not found!"
          exit 1
        fi
        ls -la app/build/outputs/apk/release/
        
    # APKファイルリネーム（バージョン情報追加）
    - name: Rename APK with version
      run: |
        cd app/build/outputs/apk/release/
        APK_FILE=$(ls *.apk | head -1)
        VERSION=${{ steps.version.outputs.VERSION }}
        NEW_NAME="cloth-stock-${VERSION}.apk"
        mv "$APK_FILE" "$NEW_NAME"
        echo "Renamed APK to: $NEW_NAME"
        echo "APK_NAME=$NEW_NAME" >> $GITHUB_ENV
        
    # APKファイルサイズ情報取得
    - name: Get APK info
      id: apk_info
      run: |
        cd app/build/outputs/apk/release/
        APK_SIZE=$(stat -c%s "$APK_NAME" | numfmt --to=iec)
        echo "APK_SIZE=$APK_SIZE" >> $GITHUB_OUTPUT
        echo "APK size: $APK_SIZE"
        
    # GitHub Releaseを作成
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Cloth Stock ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🎉 Cloth Stock ${{ steps.version.outputs.VERSION }} リリース
          
          ### 📱 アプリ情報
          - **APKサイズ**: ${{ steps.apk_info.outputs.APK_SIZE }}
          - **ビルド日時**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          - **コミット**: ${{ github.sha }}
          
          ### 📋 変更内容
          このリリースの詳細な変更内容については、[コミット履歴](https://github.com/${{ github.repository }}/compare/${{ steps.version.outputs.VERSION }}...HEAD)をご確認ください。
          
          ### 📥 インストール方法
          1. 下記の `cloth-stock-${{ steps.version.outputs.VERSION }}.apk` をダウンロード
          2. Android端末で「提供元不明のアプリのインストール」を許可
          3. APKファイルをタップしてインストール
          
          ### ⚠️ 注意事項
          - このアプリはデバッグ用の開発版です
          - Android 7.0 (API level 24) 以上が必要です
          - 初回実行時にカメラ権限の許可が必要です
          
          ---
          
          🤖 このリリースは GitHub Actions により自動生成されました
        draft: false
        prerelease: false
        
    # APKファイルをリリースアセットとしてアップロード
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/${{ env.APK_NAME }}
        asset_name: ${{ env.APK_NAME }}
        asset_content_type: application/vnd.android.package-archive
        
    # ビルドアーティファクトもアップロード（バックアップ用）
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-${{ steps.version.outputs.VERSION }}
        path: |
          app/build/outputs/apk/release/*.apk
          app/build/outputs/mapping/release/
        retention-days: 90
        
    # リリース失敗時の通知（将来の拡張用）
    - name: Notify on release failure
      if: failure()
      run: |
        echo "::error::Release build failed for version ${{ steps.version.outputs.VERSION }}"
        echo "Check the build logs for detailed error information."
        
    # リリース成功時のサマリー
    - name: Release summary
      if: success()
      run: |
        echo "::notice::Successfully released Cloth Stock ${{ steps.version.outputs.VERSION }}"
        echo "::notice::APK size: ${{ steps.apk_info.outputs.APK_SIZE }}"
        echo "::notice::Release URL: ${{ steps.create_release.outputs.html_url }}"