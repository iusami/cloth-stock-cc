name: Continuous Integration

# ワークフロートリガー: mainブランチpush + mainへのPR（重複実行排除）
on:
  push:
    branches: [ 'main' ]  # mainブランチのみ（マージ後の品質確認）
  pull_request:
    branches: [ 'main' ]  # mainへのPRのみ（開発テスト）

# 並行実行制御（同じPRで複数回実行時は最新のみ）
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  android-ci:
    name: Android CI Pipeline (Optimized)
    runs-on: ubuntu-latest
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    
    # タイムアウト設定（安定性のため延長）
    timeout-minutes: 12
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    # 2024年最新: Gradle公式アクションによる高度なキャッシュ戦略
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        validate-wrappers: false  # test-projectのWrapper検証を無効化
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    # 2024年最適化: 安定化されたテスト実行
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --stacktrace
      env:
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=768m -XX:+HeapDumpOnOutOfMemoryError -XX:+UseG1GC"
        CI: "true"
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()  # テスト失敗時もレポート生成
      with:
        name: Unit Tests Results
        path: '**/build/test-results/testDebugUnitTest/TEST-*.xml'
        reporter: java-junit
        fail-on-error: false
        
    # 2024年最適化: 安定化されたAPKビルド
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      env:
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=768m -XX:+UseG1GC"
        CI: "true"
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: debug-apk-${{ github.sha }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # 成功・失敗問わずアップロード
      with:
        name: test-results-${{ github.sha }}
        path: |
          **/build/test-results/testDebugUnitTest/
          **/build/reports/tests/testDebugUnitTest/
        retention-days: 30
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()  # 失敗時のみログアップロード
      with:
        name: build-logs-${{ github.sha }}
        path: |
          **/build/reports/
          **/build.log
        retention-days: 7

  # コードカバレッジ計測（将来の拡張用）
  code-coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    needs: android-ci  # android-ciジョブの成功後に実行
    if: success()
    
    # タイムアウト設定（安定性のため適正化）
    timeout-minutes: 8
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    # 2024年最新: Gradle公式アクションによる高度なキャッシュ戦略
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        validate-wrappers: false  # test-projectのWrapper検証を無効化
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Generate code coverage report
      run: ./gradlew jacocoTestReport --stacktrace
      env:
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"
        CI: "true"
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: 'app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # カバレッジ失敗でもCIは継続

  # 静的解析（Detekt + Android Lint）
  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    # タイムアウト設定（安定性のため適正化）
    timeout-minutes: 10
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    # 2024年最新: Gradle公式アクションによる高度なキャッシュ戦略
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        validate-wrappers: false  # test-projectのWrapper検証を無効化
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    # 2024年最適化: 安定化された静的解析
    - name: Run lint and Detekt analysis
      run: ./gradlew lintDebug detekt --stacktrace
      env:
        GRADLE_OPTS: "-Xmx3g -XX:MaxMetaspaceSize=512m -XX:+UseG1GC"
        CI: "true"
      
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results-${{ github.sha }}
        path: '**/build/reports/lint-results-*.html'
        retention-days: 30
        
    - name: Upload Detekt results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: detekt-results-${{ github.sha }}
        path: |
          **/build/reports/detekt/
          app/config/detekt/baseline.xml
        retention-days: 30

  # Android Studio相当のビルド検証（kaptタスク等の明示的テスト）
  android-studio-build-verification:
    name: Android Studio Build Verification
    runs-on: ubuntu-latest
    
    # GitHub Token権限設定
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    
    # タイムアウト設定（安定性のため適正化）
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    # 2024年最新: Gradle公式アクションによる高度なキャッシュ戦略
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        validate-wrappers: false  # test-projectのWrapper検証を無効化
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    # 2024年最適化: 安定化されたビルド検証プロセス
    - name: Clean and build verification
      run: ./gradlew clean build --stacktrace
      env:
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+UseG1GC -XX:+UseStringDeduplication"
        CI: "true"
        
    # 重要なビルド段階の個別検証
    - name: Verify KAPT processing
      run: ./gradlew kaptDebugKotlin kaptReleaseKotlin --stacktrace
      env:
        GRADLE_OPTS: "-Xmx3g -XX:MaxMetaspaceSize=768m"
        CI: "true"
      
    - name: Upload KAPT build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: kapt-build-logs-${{ github.sha }}
        path: |
          **/build/reports/
          **/build/tmp/kapt*/
          **/*.log
        retention-days: 7
        
    - name: Upload Kotlin compilation logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: kotlin-compilation-logs-${{ github.sha }}
        path: |
          **/build/tmp/kotlin-classes/
          **/build/kotlin/
        retention-days: 7